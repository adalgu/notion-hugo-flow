<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ChatGPT on My Blog</title>
    <link>//localhost:1313/tags/chatgpt/</link>
    <description>Recent content in ChatGPT on My Blog</description>
    <image>
      <title>My Blog</title>
      <url>//localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>//localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.140.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Apr 2025 12:26:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/tags/chatgpt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>동적 Few-shot 프롬프트를 이용한 텍스트 교정의 일관성 유지</title>
      <link>//localhost:1313/posts/dynamic-few-shot-prompting-for-text-consistency/</link>
      <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/dynamic-few-shot-prompting-for-text-consistency/</guid>
      <description>본 포스트에서는 대량의 텍스트를 처리할 때 각 청크별 일관성을 유지하는 도전적인 과제를 해결하기 위한 신기술, 동적 Few-shot 프롬프트 방식을 소개합니다. 이 방법은 최근 처리된 교정 사례를 프롬프트로 활용하여 모델이 새로운 텍스트 청크를 일관된 스타일과 톤으로 교정하도록 유도합니다. 구체적인 구현 방안과 예시 코드를 통해, 독자들이 이 기술을 이해하고 자신의 프로젝트에 적용할 수 있도록 안내합니다.</description>
    </item>
    <item>
      <title>MacOS에서 Streamlit 애플리케이션을 효율적으로 관리하는 방법</title>
      <link>//localhost:1313/posts/managing-streamlit-applications-on-macos/</link>
      <pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/managing-streamlit-applications-on-macos/</guid>
      <description>이 블로그 포스트에서는 MacOS 환경에서 Streamlit 애플리케이션을 지속적으로 실행하고 관리하는 두 가지 주요 방법을 소개합니다. nohup을 사용한 백그라운드 실행과 tmux를 활용한 세션 관리 방법을 탐색하며, 실행 상황 모니터링과 프로세스 종료 방법에 대해서도 논의합니다. 개발자가 자신의 Streamlit 애플리케이션을 더 효과적으로 관리할 수 있도록 도와주는 이 글은 필수 읽을 거리입니다.</description>
    </item>
    <item>
      <title>[ElephantSQL] PostgreSQL과 Python을 연동하는 방법: 기초부터 코드 예제까지</title>
      <link>//localhost:1313/posts/postgres-vs-mongodb-python-genai-app/</link>
      <pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/postgres-vs-mongodb-python-genai-app/</guid>
      <description>이 글은 Streamlit 프레임워크를 활용해 파이썬으로 개발된 AI 기능이 탑재된 애플리케이션의 로그 데이터를 관리하고 분석하기 위한 데이터베이스 통합의 중요성에 초점을 맞추고 있다. MongoDB와 PostgreSQL 사이의 선택 고민을 탐구하며, 강화학습에 적합한 구조화된 데이터 축적을 위해 PostgreSQL을 선택한 과정을 소개한다. ElephantSQL을 통해 AWS 상에서 서비스로 제공되는 PostgreSQL의 클라우드 기능을 강조하며, psycopg2 라이브러리를 사용해 PostgreSQL 데이터베이스에 연결하고 기본 데이터베이스 작업을 수행하는 방법을 코드 스니펫과 함께 설명한다.</description>
    </item>
  </channel>
</rss>
