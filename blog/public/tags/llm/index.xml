<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>LLM on Exobrain</title><link>http://localhost:1313/tags/llm/</link><description>Recent content in LLM on Exobrain</description><image><title>Exobrain</title><url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url><link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link></image><generator>Hugo -- 0.140.0</generator><language>en</language><lastBuildDate>Fri, 04 Apr 2025 09:47:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/llm/index.xml" rel="self" type="application/rss+xml"/><item><title>랭그래프 vs. 랭체인 : LLM 개발 프레임워크의 진화</title><link>http://localhost:1313/posts/langgraph-vs-langchain-evolution-of-llm-development-frameworks/</link><pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/langgraph-vs-langchain-evolution-of-llm-development-frameworks/</guid><description>대규모 언어 모델(LLM) 기반 애플리케이션 개발이 급증하면서 랭체인(LangChain)과 랭그래프(LangGraph)가 주목받고 있습니다. 이 글에서는 두 프레임워크의 특징, 차이점, 그리고 실제 적용 사례를 살펴봅니다. AutoGPT와의 유사성을 통해 각 프레임워크를 이해하고, 나스닥 지수 분석 및 포트폴리오 최적화 예제를 통해 LangGraph의 실용성을 확인해보세요.</description></item><item><title>LangGraph 사용법: 멀티 에이전트로 S&amp;P 500 데이터 시각화하기</title><link>http://localhost:1313/posts/langchain-langgraph-multi-agent-collaboration/</link><pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/langchain-langgraph-multi-agent-collaboration/</guid><description>LangChain의 새로운 라이브러리 LangGraph를 소개합니다. LangGraph를 사용하여 멀티 에이전트 콜라보레이션을 구현하고 S&amp;amp;P 500 지수 데이터를 검색하고 시각화하는 방법을 알아보세요.</description></item><item><title>동적 Few-shot 프롬프트를 이용한 텍스트 교정의 일관성 유지</title><link>http://localhost:1313/posts/dynamic-few-shot-prompting-for-text-consistency/</link><pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/dynamic-few-shot-prompting-for-text-consistency/</guid><description>본 포스트에서는 대량의 텍스트를 처리할 때 각 청크별 일관성을 유지하는 도전적인 과제를 해결하기 위한 신기술, 동적 Few-shot 프롬프트 방식을 소개합니다. 이 방법은 최근 처리된 교정 사례를 프롬프트로 활용하여 모델이 새로운 텍스트 청크를 일관된 스타일과 톤으로 교정하도록 유도합니다. 구체적인 구현 방안과 예시 코드를 통해, 독자들이 이 기술을 이해하고 자신의 프로젝트에 적용할 수 있도록 안내합니다.</description></item></channel></rss>