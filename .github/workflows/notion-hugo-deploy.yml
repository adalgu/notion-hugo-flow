name: Notion ‚Üí Hugo ‚Üí GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  schedule:
    - cron: '0 */1 * * *'  # Îß§ÏãúÍ∞Ñ Ïã§Ìñâ
  
  workflow_dispatch:
    inputs:
      sync_mode:
        description: 'Sync mode (incremental or full-sync)'
        required: false
        default: 'incremental'
        type: choice
        options:
        - incremental
        - full-sync
  
  repository_dispatch:
    types: [trigger-hugo-build]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "deploy"
  cancel-in-progress: false

env:
  HUGO_VERSION: 0.128.0
  PYTHON_VERSION: "3.10"
  STATE_FILE: .notion-hugo-state.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Hugo
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${{ env.HUGO_VERSION }}/hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install notion-client python-dotenv pyyaml fs tabulate

      - name: Restore Notion sync state
        uses: actions/cache@v4
        with:
          path: ${{ env.STATE_FILE }}
          key: notion-state-${{ github.ref_name }}
          restore-keys: |
            notion-state-

      - name: Determine sync mode
        id: sync-mode
        run: |
          # ÎèôÍ∏∞Ìôî Î™®Îìú Í≤∞Ï†ï Î°úÏßÅ Í∞úÏÑ†
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          if [[ -z "$COMMIT_MSG" ]]; then
            COMMIT_MSG="$(git log -1 --pretty=%B)"
          fi
          REF_NAME="${{ github.ref_name }}"
          EVENT_NAME="${{ github.event_name }}"
          MANUAL_INPUT="${{ github.event.inputs.sync_mode }}"
          
          echo "Debug info:"
          echo "- Commit message: '$COMMIT_MSG'"
          echo "- Ref name: '$REF_NAME'"
          echo "- Event name: '$EVENT_NAME'"
          echo "- Manual input: '$MANUAL_INPUT'"
          
          # Ïö∞ÏÑ†ÏàúÏúÑÎ≥Ñ Î™®Îìú Í≤∞Ï†ï
          if [[ "$EVENT_NAME" == "workflow_dispatch" && -n "$MANUAL_INPUT" ]]; then
            # 1ÏàúÏúÑ: ÏàòÎèô Ïã§Ìñâ Ïãú ÏÇ¨Ïö©ÏûêÍ∞Ä ÏßÅÏ†ë ÏÑ†ÌÉùÌïú Î™®Îìú
            SYNC_MODE="$MANUAL_INPUT"
            echo "üìù User selected mode: $SYNC_MODE"
          elif [[ "$COMMIT_MSG" == *"[full-sync]"* ]] || \
               [[ "$COMMIT_MSG" == *"[force-rebuild]"* ]]; then
            # 2ÏàúÏúÑ: Ïª§Î∞ã Î©îÏãúÏßÄÏùò ÌÇ§ÏõåÎìú
            SYNC_MODE="full-sync"
            echo "üè∑Ô∏è Keyword-triggered full sync"
          elif [[ "$REF_NAME" == *"full-sync"* ]]; then
            # 3ÏàúÏúÑ: Î∏åÎûúÏπòÎ™ÖÏóê full-sync Ìè¨Ìï®
            SYNC_MODE="full-sync"
            echo "üåø Branch-triggered full sync"
          elif [[ "$EVENT_NAME" == "schedule" ]]; then
            # 4ÏàúÏúÑ: Ïä§ÏºÄÏ§Ñ Ïã§ÌñâÏùÄ full-sync (Ï†ïÍ∏∞ ÎèôÍ∏∞Ìôî)
            SYNC_MODE="full-sync"
            echo "‚è∞ Scheduled full sync"
          else
            # Í∏∞Î≥∏: incremental Î™®Îìú
            SYNC_MODE="incremental"
            echo "‚ö° Default incremental sync"
          fi
          
          echo "mode=$SYNC_MODE" >> $GITHUB_OUTPUT
          
          if [[ "$SYNC_MODE" == "full-sync" ]]; then
            echo "üîÑ Full sync mode activated"
          else
            echo "‚ö° Incremental sync mode activated"
          fi
          
          echo "Final sync mode: $SYNC_MODE"

      - name: Debug Secrets
        run: |
          if [ -n "${{ secrets.NOTION_TOKEN }}" ]; then
            echo "‚úÖ NOTION_TOKEN secret is loaded."
          else
            echo "‚ùå NOTION_TOKEN secret is NOT loaded or is empty."
          fi
          if [ -n "${{ secrets.NOTION_DATABASE_ID_POSTS }}" ]; then
            echo "‚úÖ NOTION_DATABASE_ID_POSTS secret is loaded."
          else
            echo "‚ùå NOTION_DATABASE_ID_POSTS secret is NOT loaded or is empty."
          fi

      - name: Generate Markdown from Notion
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID_POSTS: ${{ secrets.NOTION_DATABASE_ID_POSTS }}
        run: |
          SYNC_MODE="${{ steps.sync-mode.outputs.mode }}"
          echo "Running with sync mode: $SYNC_MODE"
          
          if [[ "$SYNC_MODE" == "full-sync" ]]; then
            echo "üîÑ Executing full synchronization..."
            python notion_hugo_app.py --full-sync --state-file $STATE_FILE
          else
            echo "‚ö° Executing incremental synchronization..."
            python notion_hugo_app.py --incremental --state-file $STATE_FILE
          fi

      - name: Setup GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
