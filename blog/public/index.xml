<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Exobrain</title><link>http://localhost:1313/</link><description>Recent content on Exobrain</description><image><title>Exobrain</title><url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url><link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link></image><generator>Hugo -- 0.140.0</generator><language>en</language><lastBuildDate>Sun, 22 Jun 2025 03:36:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml"/><item><title>AI 기반 웹 자동화의 부상: Browser Use와 자동화 브라우징의 미래</title><link>http://localhost:1313/posts/ai-%EA%B8%B0%EB%B0%98-%EC%9B%B9-%EC%9E%90%EB%8F%99%ED%99%94%EC%9D%98-%EB%B6%80%EC%83%81-browser-use%EC%99%80-%EC%9E%90%EB%8F%99%ED%99%94-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A7%95%EC%9D%98-%EB%AF%B8%EB%9E%98/</link><pubDate>Tue, 10 Jun 2025 07:00:00 +0000</pubDate><guid>http://localhost:1313/posts/ai-%EA%B8%B0%EB%B0%98-%EC%9B%B9-%EC%9E%90%EB%8F%99%ED%99%94%EC%9D%98-%EB%B6%80%EC%83%81-browser-use%EC%99%80-%EC%9E%90%EB%8F%99%ED%99%94-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A7%95%EC%9D%98-%EB%AF%B8%EB%9E%98/</guid><description>&lt;h2 id="서론">서론&lt;/h2>
&lt;p>최근 AI 기술의 발전으로 웹 자동화 분야에 혁신적인 변화가 일어나고 있습니다. 특히 Browser Use라는 프로젝트가 Manus를 통해 세계적인 주목을 받게 되었습니다. 이는 AI가 웹 브라우저를 직접 제어하고 복잡한 작업을 수행할 수 있는 능력을 보여주는 중요한 사례입니다.&lt;/p>
&lt;p>저는 이전에 AgenticReplay라는 유사한 컨셉의 프로젝트를 구상하고 구현을 준비했었습니다. 그러나 Browser Use가 완성도 높게 출시되면서 이 분야에 큰 변화가 일어났습니다. 이 블로그 포스트에서는 두 프로젝트를 비교하고, AI 기반 웹 자동화의 현재와 미래에 대해 살펴보겠습니다.&lt;/p></description></item><item><title>VSCode의 Cline 대화 히스토리 백업 및 활용 가이드</title><link>http://localhost:1313/posts/vscode-cline-chat-history-backup-guide/</link><pubDate>Tue, 15 Apr 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/vscode-cline-chat-history-backup-guide/</guid><description>&lt;p>VS Code는 개발자들 사이에서 가장 인기 있는 코드 에디터 중 하나로, 다양한 확장 기능을 통해 생산성을 향상시킬 수 있습니다. 그 중에서도 AI 코딩 도우미 익스텐션인 Cline은 개발 작업 과정에서 큰 도움이 됩니다. 하지만 이런 도구를 사용하면서 축적되는 대화 내역은 단순한 기록을 넘어 매우 가치 있는 자산이 될 수 있습니다.&lt;/p>
&lt;p>이 글에서는 VS Code의 Cline 대화 내역을 백업하고, 이를 효과적으로 활용하는 방법에 대해 알아보겠습니다.&lt;/p>
&lt;h2 id="1-cline-채팅-히스토리는-어디에-저장될까">1. Cline 채팅 히스토리는 어디에 저장될까?&lt;/h2>
&lt;p>VS Code 익스텐션들은 일반적으로 사용자 데이터를 특정 위치에 저장합니다. Cline 익스텐션도 마찬가지입니다.&lt;/p></description></item><item><title>Mac + Colima 환경에서 Immich 설치기: 구글 포토를 대체한 우리 집 사진 서버 구축기</title><link>http://localhost:1313/posts/mac-colima-immich-setup-guide-google-photos-alternative/</link><pubDate>Sat, 05 Apr 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/mac-colima-immich-setup-guide-google-photos-alternative/</guid><description>&lt;img src="https://prod-files-secure.s3.us-west-2.amazonaws.com/94f51666-273a-443d-bf89-42827b5b6876/c7880f58-75d7-4160-aed8-977112fb3669/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;amp;X-Amz-Credential=ASIAZI2LB466R5BCDN5C%2F20250622%2Fus-west-2%2Fs3%2Faws4_request&amp;amp;X-Amz-Date=20250622T034012Z&amp;amp;X-Amz-Expires=3600&amp;amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICmA8uXsBSuoFGtqcWE7M6XRgLJ7lXNJ5XXZ3k4TwuqZAiBIuCTqg3MrSmAGZPQaxoS%2BCNCLmHHxKKvlaIQJRWP%2BoCqIBAji%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDYzNzQyMzE4MzgwNSIMrEb22hz2sM5M25g3KtwDR59qmcdfS4TnnGqgqrDpV4w3vNLT25abYVHom5tOcJOoyjec4XBaofGDxZ9WTq9K3Vlxa02m2sOpanBJ%2Bhx73uCmcreu440PsQ2mIucd9S1Fr1EfL0yJU30SMedUHPW3TvUsWTNk7dZXnE8ak6aBjLvMAl5nHOGM7fh%2B1ufUP9uFr8hq3WUWdSqkCf6iujllUxvauLV7TBzJGPOooaV8hKD5lB4UgiwgVHTe88UFsvNcRm5IXWy98VKnViZaVJC9SLeq8Xd8Z0DB0ab3X0LMtU3UAJ02i08Io2yfFmWOKAcl6jCJ1yEUIeqzpa0iQ7dTArPEkieJXUrxVA%2Bps47wNlByoVniLQQ5opfhQfdYwF12%2BR223qb1XpXVms%2BSdO81bzvvZxQy28MffUmc%2B7YW%2FVHnY6V0126RwRSXHgfAAIWQIUViVG4UJvyqJkh5um%2FQjr4MUIajV2i1o2iV4uB4iY4D%2BrX0e0NjJcEfDCkPct4N3FSSFGKQ5sEGlxrPL%2B1t%2FB%2FJq7pi7zraz42XbIiK7Ysk59lQi1XxJJWfLr1duniQ490F4AWGikguW7BLmCp9LlnVSf4qxIHH8QwoecgaRr4rGJUnxEfhblodOxGycefoS31WQ5%2FZouM%2FP%2Fgwr5vdwgY6pgE8NI2AHKjdHUwlwjiuuJuRn14IY8gekZPvgm4cBB8yg0krnvXEOeJdztQNp%2Fh%2BzP7S0WK1%2BsCpUxtDImk39R5Gy1ap%2BXJ4cgiBgApvKN1JLl3Q%2BGA8nsj55YoSRIUyc8pCzTmBTmzOZ8to5S6%2F4mq6Yyfvf3JKSg71cAawZo5%2FKVpCK1S4gC8WhSaa5N%2BpPAOUaui%2BSbXQiY4hK6IVY07PsDgn4B%2F5&amp;amp;X-Amz-Signature=6d9832197688749bb584bf64bbf3cd09ef430f1f58e3e2bfc36fb2ddfd5a7f38&amp;amp;X-Amz-SignedHeaders=host&amp;amp;x-amz-checksum-mode=ENABLED&amp;amp;x-id=GetObject" alt="" />
&lt;hr>
&lt;p>&lt;strong>1. 배경: 왜 Immich인가?&lt;/strong>&lt;/p>
&lt;p>우리는 아이들 사진을 수천 장씩 찍는 평범한 부모다. 그런데 구글 포토 무료 용량이 한계에 다다르자, 개인 사진 서버의 필요성이 생겼다.
&lt;strong>Synology&lt;/strong> 같은 NAS도 고려했지만, 맥미니 + 외장 SSD 2TB 세트가 이미 있으니 Docker 기반의 &lt;strong>Immich&lt;/strong> 설치를 선택했다.&lt;/p>
&lt;p>📌 참고: &lt;a href="https://immich.app" >Immich 공식 사이트&lt;/a>
&lt;/p>
&lt;hr>
&lt;p>&lt;strong>2. 준비 환경&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>맥미니 M1&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Colima&lt;/strong> (Docker 대체 VM 환경)&lt;/li>
&lt;li>&lt;strong>외장 SSD 2TB (USB-C로 연결)&lt;/strong>&lt;/li>
&lt;li>iPhone, Galaxy에서 접근 가능해야 함&lt;/li>
&lt;li>Docker, Docker Compose 설치 완료&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>**3. Immich 설치 (첫 시도)
**&lt;/p></description></item><item><title>아이폰 혁신 통합: 모바일 생태계와 디지털 경제에 미친 영향</title><link>http://localhost:1313/posts/iphone-innovation-impact-mobile-ecosystem/</link><pubDate>Wed, 02 Apr 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/iphone-innovation-impact-mobile-ecosystem/</guid><description>아이폰은 단순한 기기가 아닌, 기존 기술의 혁신적 통합과 사용자 중심 디자인으로 모바일 산업과 디지털 경제, 라이프스타일을 근본부터 변혁시킨 촉매제였습니다. 이 포스트에서는 아이폰의 성공 요인과 파급 효과, 그리고 미래 기술 혁신에 주는 교훈을 분석합니다.</description></item><item><title>AI 기반 웹 자동화의 부상: Browser Use와 자동화 브라우징의 미래</title><link>http://localhost:1313/posts/ai-web-automation-browser-use/</link><pubDate>Sat, 22 Mar 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/ai-web-automation-browser-use/</guid><description>AI가 웹 브라우저를 제어하는 시대가 열렸습니다. Manus가 채택한 Browser Use와 유사 프로젝트 AgenticReplay를 비교하며 AI 기반 웹 자동화의 현재 기술 수준과 미래 발전 가능성을 탐구합니다. Selenium과 Playwright 기반 접근 방식의 차이점, AI 통합의 중요성, 그리고 Realtime API 연동 등 확장 아이디어를 제시합니다.</description></item><item><title>자주 쓰는 Git 명령어 정리</title><link>http://localhost:1313/posts/essential-git-commands-for-beginners/</link><pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/essential-git-commands-for-beginners/</guid><description>Git의 기본적이고 필수적인 명령어들을 단계별로 설명합니다. 저장소 초기화부터 변경 사항 관리, 브랜치 다루기, 원격 저장소와의 상호작용까지 실무에서 꼭 알아야 할 Git 명령어들을 정리했습니다.</description></item><item><title>자주 쓰는 Docker 명령어 정리 시리즈</title><link>http://localhost:1313/posts/docker-and-docker-compose-essential-commands/</link><pubDate>Sat, 15 Feb 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/docker-and-docker-compose-essential-commands/</guid><description>Docker 및 Docker Compose의 기본 명령어들을 정리합니다. 이미지 관리, 컨테이너 실행, 로그 확인 등 프로젝트에서 자주 사용되는 명령어들을 상세히 설명하여 컨테이너 관리를 더욱 쉬욵게 해드립니다.</description></item><item><title>이수지 때문에 못 입겠어!" 강남 엄마들 몽클레르 패딩 '손절' 사태</title><link>http://localhost:1313/posts/gangnam-moms-moncler-controversy/</link><pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/gangnam-moms-moncler-controversy/</guid><description>개그우먼 이수지의 &amp;#39;대치동 엄마 패러디&amp;#39; 영상 이후, 강남 엄마들 사이에서 몽클레르 패딩을 기피하는 현상이 나타나고 있다. 중고 매물이 급증하고 맘카페에는 관련 글이 쏟아지는 등 몽클레르 패딩의 인기가 급락하고 있다.</description></item><item><title>🛠️ 맥미니 서버 운영기: 원격 재부팅 후 Docker를 살리다</title><link>http://localhost:1313/posts/macmini-docker-reboot-colima-fix/</link><pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/macmini-docker-reboot-colima-fix/</guid><description>집에서 맥미니를 서버로 운영하며 Docker를 사용하던 중 재부팅 후 Docker 데몬 실행 오류를 겪었습니다. 원격 SSH 환경에서 Docker Desktop의 한계를 넘어서기 위해 **Colima**와 환경 변수 설정으로 문제를 해결한 경험을 공유합니다. **ChatGPT**의 도움으로 단계별 해결 과정을 따라가며 원인을 찾고 해결하는 스토리입니다.</description></item><item><title>Python 프로젝트 환경 관리: Poetry를 활용한 효율적인 워크플로우</title><link>http://localhost:1313/posts/python-poetry-project-environment-management/</link><pubDate>Mon, 23 Sep 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/python-poetry-project-environment-management/</guid><description>Python 프로젝트 환경을 효율적으로 관리하는 데 어려움을 겪고 있나요? 이 글에서는 Poetry를 통해 의존성 관리, 가상 환경 설정, 패키징을 간소화하는 방법을 소개합니다. &amp;#39;내 컴퓨터에서는 잘 돌아가는데&amp;#39;라는 문제를 해결하고 더 나은 개발 워크플로우를 구축해 보세요.</description></item><item><title>랭그래프 vs. 랭체인 : LLM 개발 프레임워크의 진화</title><link>http://localhost:1313/posts/langgraph-vs-langchain-evolution-of-llm-development-frameworks/</link><pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/langgraph-vs-langchain-evolution-of-llm-development-frameworks/</guid><description>대규모 언어 모델(LLM) 기반 애플리케이션 개발이 급증하면서 랭체인(LangChain)과 랭그래프(LangGraph)가 주목받고 있습니다. 이 글에서는 두 프레임워크의 특징, 차이점, 그리고 실제 적용 사례를 살펴봅니다. AutoGPT와의 유사성을 통해 각 프레임워크를 이해하고, 나스닥 지수 분석 및 포트폴리오 최적화 예제를 통해 LangGraph의 실용성을 확인해보세요.</description></item><item><title>파이썬으로 Active ETF 종목 변동 분석하기</title><link>http://localhost:1313/posts/analyzing-active-etf-with-python/</link><pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/analyzing-active-etf-with-python/</guid><description>이 포스트에서는 파이썬을 사용하여 Active ETF의 종목 변동을 분석하는 방법을 소개합니다. 타임폴리오 자산운용의 &amp;#39;타임폴리오 코리아 플러스배당액티브 ETF&amp;#39;를 예시로 데이터 수집, 분석, 시각화를 통해 매니저의 투자 전략을 파악하는 방법을 배워보세요.</description></item><item><title>ETF는 수수료를 어떻게 떼갈까? 매일? 연말에 한번에? 초보 투자자를 위한 쉽게 이해하는 가이드</title><link>http://localhost:1313/posts/etf-fees-daily-or-annually/</link><pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/etf-fees-daily-or-annually/</guid><description>ETF 투자는 다양한 자산에 분산 투자할 수 있는 좋은 방법이지만, ETF 선택 시 수수료 구조를 이해하는 것이 중요합니다. 이번 글에서는 대표적인 한국의 ETF 세 개를 예시로 들어, ETF 수수료가 어떻게 차감되는지 쉽게 설명합니다. 일일 차감 방식과 연간 보수율의 차이를 이해하고, 투자에 도움이 되는 정보를 얻어보세요.</description></item><item><title>LangGraph 사용법: 멀티 에이전트로 S&amp;P 500 데이터 시각화하기</title><link>http://localhost:1313/posts/langchain-langgraph-multi-agent-collaboration/</link><pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/langchain-langgraph-multi-agent-collaboration/</guid><description>LangChain의 새로운 라이브러리 LangGraph를 소개합니다. LangGraph를 사용하여 멀티 에이전트 콜라보레이션을 구현하고 S&amp;amp;P 500 지수 데이터를 검색하고 시각화하는 방법을 알아보세요.</description></item><item><title>챗GPT 파인튜닝 기초: gpt-3.5-turbo 모델 사례 분석</title><link>http://localhost:1313/posts/ai-fine-tuning-gpt-3.5-turbo-case-study/</link><pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/ai-fine-tuning-gpt-3.5-turbo-case-study/</guid><description>이 글에서는 인공지능의 핵심 개념 중 하나인 &amp;#39;파인튜닝&amp;#39;에 대해 쉽게 이해할 수 있도록 gpt-3.5-turbo 모델을 사례로 들어 설명합니다. 파인튜닝의 정의부터 시작하여, 실제 모델이 어떻게 특정 데이터셋에 맞춰 조정되어 성능이 향상되는지, 그리고 이 과정이 어떻게 여러분의 학습 방법에 영감을 줄 수 있는지에 대해 자세히 알아봅니다.</description></item><item><title>동적 Few-shot 프롬프트를 이용한 텍스트 교정의 일관성 유지</title><link>http://localhost:1313/posts/dynamic-few-shot-prompting-for-text-consistency/</link><pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/dynamic-few-shot-prompting-for-text-consistency/</guid><description>본 포스트에서는 대량의 텍스트를 처리할 때 각 청크별 일관성을 유지하는 도전적인 과제를 해결하기 위한 신기술, 동적 Few-shot 프롬프트 방식을 소개합니다. 이 방법은 최근 처리된 교정 사례를 프롬프트로 활용하여 모델이 새로운 텍스트 청크를 일관된 스타일과 톤으로 교정하도록 유도합니다. 구체적인 구현 방안과 예시 코드를 통해, 독자들이 이 기술을 이해하고 자신의 프로젝트에 적용할 수 있도록 안내합니다.</description></item><item><title>구글 계정 전환 꿀팁! 효율적인 맞춤형 바로가기 만들기</title><link>http://localhost:1313/posts/custom-google-service-shortcuts-guide/</link><pubDate>Wed, 06 Mar 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/custom-google-service-shortcuts-guide/</guid><description>다양한 구글 서비스에 빠르게 접근할 수 있는 맞춤형 인터넷 바로가기 생성 방법을 소개합니다.</description></item><item><title>MacOS에서 Streamlit 애플리케이션을 효율적으로 관리하는 방법</title><link>http://localhost:1313/posts/managing-streamlit-applications-on-macos/</link><pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/managing-streamlit-applications-on-macos/</guid><description>이 블로그 포스트에서는 MacOS 환경에서 Streamlit 애플리케이션을 지속적으로 실행하고 관리하는 두 가지 주요 방법을 소개합니다. nohup을 사용한 백그라운드 실행과 tmux를 활용한 세션 관리 방법을 탐색하며, 실행 상황 모니터링과 프로세스 종료 방법에 대해서도 논의합니다. 개발자가 자신의 Streamlit 애플리케이션을 더 효과적으로 관리할 수 있도록 도와주는 이 글은 필수 읽을 거리입니다.</description></item><item><title>[ElephantSQL] PostgreSQL과 Python을 연동하는 방법: 기초부터 코드 예제까지</title><link>http://localhost:1313/posts/postgres-vs-mongodb-python-genai-app/</link><pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/posts/postgres-vs-mongodb-python-genai-app/</guid><description>이 글은 Streamlit 프레임워크를 활용해 파이썬으로 개발된 AI 기능이 탑재된 애플리케이션의 로그 데이터를 관리하고 분석하기 위한 데이터베이스 통합의 중요성에 초점을 맞추고 있다. MongoDB와 PostgreSQL 사이의 선택 고민을 탐구하며, 강화학습에 적합한 구조화된 데이터 축적을 위해 PostgreSQL을 선택한 과정을 소개한다. ElephantSQL을 통해 AWS 상에서 서비스로 제공되는 PostgreSQL의 클라우드 기능을 강조하며, psycopg2 라이브러리를 사용해 PostgreSQL 데이터베이스에 연결하고 기본 데이터베이스 작업을 수행하는 방법을 코드 스니펫과 함께 설명한다.</description></item><item><title>서론-본론-결론이 아니다. 기승전결이다.</title><link>http://localhost:1313/posts/narrative-structure-kisungjeonggyeol-not-introduction-body-conclusion/</link><pubDate>Fri, 16 Feb 2024 07:17:00 +0000</pubDate><guid>http://localhost:1313/posts/narrative-structure-kisungjeonggyeol-not-introduction-body-conclusion/</guid><description>서론-본론-결론은 공식적인 글쓰기 구조지만 재미있는 글을 쓰고 싶다면 기승전결 구조를 인식해야 합니다. 이 글은 박종인의 &amp;#39;기자의 글쓰기&amp;#39;에서 발취한 항리한 작문 구조에 대한 통찼력 있는 통찼을 제공합니다. 리듬 있는 글쓰기의 부당탈탈한 매력을 발견해 보세요.</description></item><item><title>FastAPI에서의 디펜던시 인젝션(Dependency Injection)</title><link>http://localhost:1313/posts/fastapi-dependency-injection-pattern-guide/</link><pubDate>Mon, 12 Feb 2024 04:26:00 +0000</pubDate><guid>http://localhost:1313/posts/fastapi-dependency-injection-pattern-guide/</guid><description>FastAPI에서 디펜던시 인젝션은 코드의 재사용성과 유지보수성을 크게 향상시키는 강력한 패턴입니다. 이 글에서는 디펜던시 인젝션의 개념과 FastAPI에서의 구현 방법을 실제 예제와 함께 상세히 설명합니다. 인증, 데이터베이스 세션 관리, 권한 검증 등을 더 효율적으로 처리하는 방법을 배워보세요.</description></item><item><title>Colab(코랩)에서 KoGPT 실행</title><link>http://localhost:1313/posts/colab%EC%BD%94%EB%9E%A9%EC%97%90%EC%84%9C-kogpt-%EC%8B%A4%ED%96%89/</link><pubDate>Sat, 05 Nov 2022 03:22:00 +0000</pubDate><guid>http://localhost:1313/posts/colab%EC%BD%94%EB%9E%A9%EC%97%90%EC%84%9C-kogpt-%EC%8B%A4%ED%96%89/</guid><description>&lt;h2 id="코랩에-우선-패키지-설치">코랩에 우선 패키지 설치&lt;/h2>
&lt;h3 id="패키지를-설치할-구글-드라이브-마운트">패키지를 설치할 구글 드라이브 마운트&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">google.colab&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">drive&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">drive&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/content/drive&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">my_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/content/package&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">save_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/content/drive/MyDrive/Colab Notebooks/package&amp;#39;&lt;/span> &lt;span class="c1">## 패키지가 저장될 경로&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">symlink&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">save_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">my_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">my_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="패키지-설치하기">패키지 설치하기&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="err">!&lt;/span>&lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="n">my_path&lt;/span> &lt;span class="n">selenium&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="코랩에서-kogpt-실행">코랩에서 Kogpt 실행&lt;/h2>
&lt;h3 id="예제코드-실행">예제코드 실행&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">torch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">transformers&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">AutoTokenizer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">AutoModelForCausalLM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tokenizer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AutoTokenizer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_pretrained&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;kakaobrain/kogpt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">revision&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;KoGPT6B-ryan1.5b-float16&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># or float32 version: revision=KoGPT6B-ryan1.5b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bos_token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[BOS]&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">eos_token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[EOS]&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">unk_token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[UNK]&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pad_token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[PAD]&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mask_token&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;[MASK]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AutoModelForCausalLM&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_pretrained&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;kakaobrain/kogpt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">revision&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;KoGPT6B-ryan1.5b-float16&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># or float32 version: revision=KoGPT6B-ryan1.5b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pad_token_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">tokenizer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">eos_token_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">torch_dtype&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;auto&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">low_cpu_mem_usage&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">device&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;cuda&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">non_blocking&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">eval&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">prompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;인공지능아, 너는 말을 할 수 있니?&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">no_grad&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tokenizer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prompt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">return_tensors&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;pt&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">device&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;cuda&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">non_blocking&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gen_tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tokens&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">do_sample&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temperature&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_length&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">generated&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tokenizer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">batch_decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gen_tokens&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">generated&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;img src="https://prod-files-secure.s3.us-west-2.amazonaws.com/94f51666-273a-443d-bf89-42827b5b6876/721152fd-075e-419f-aead-35c76bb522d7/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;amp;X-Amz-Credential=ASIAZI2LB466WIUACMPY%2F20250622%2Fus-west-2%2Fs3%2Faws4_request&amp;amp;X-Amz-Date=20250622T034139Z&amp;amp;X-Amz-Expires=3600&amp;amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDZQjn5EcfKBbxzQOo9in2YOBQe8mkPdj0BXnmDXo3uTAIhAI%2BSDk9q%2B%2BRN2hMPCppyEKvdF9gdf3vpJSmcx9CP%2BjftKogECOH%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1Igyg5xZXBPowavJKHNoq3AMQkrQ%2FE2QbNWkAxALc8TTxPZARGGAxOtWB73I%2BQsbtBZGlEXa99LgaHlD9PcfXi1SLXU1C5EuN43Sfj9fzFt6k9j%2BGqs9xbro61PGJGbsznrWgCux9HyG3mdwbxB370UVeQD0XkG%2FjbSFQ5OBAucKaHO5pOr8dFtxmnN2z6b90qfMxjvilCLluqJDxIOyLHolD8oFuBXX3fYDE6D7L2f4TxYnWn4pvFJwZPOWkFOeHVjBHoBYgNN0NUWrqFRY7tsT83yDKZY54Sy%2B3GYxMt6nSlSdXmUo2Wi1YiZG%2FXphx8sXQSvQRMjw2QlLIM1dtDD2lUXYODN2uD%2F0ksZKlz%2B8Kvzgjn5R9YCtn7zSXRz2XOywgjCxeJM5b2gTxZ%2Brl%2BxZCAcCc3srF5NujcfQ22VIaP3qIEBwSNdkzJf%2BxDtzkRy%2BAahNI0Hw5oG2w43sIKGPx9rYa%2BlaR7j5TYyX49Ge5SaM0DJxyQw2R1IEWYK%2FVxr9HvQZVBUWTaWMquxcJL2xyv%2FWThTPnKd82N9WTIOYAFVEHbVXYHIx%2FH0xn45UntltUGTn%2FtcNlnQO6IyjctElPHpta3WhjIeNHGLUEEhb5MkbfJRi5eep%2BlGNKc0JQgxg6ZXkzPrupF3t9eTCViN3CBjqkAcqODWFiQCMQvy6E6NTciCYDSH5oojdKFCFYTbEHwgTwOxwNeeTdLQggSM6OrEevVua9PHacG9ei35y80s2xupVg9Y2WBeTf815ckjCAIrUspCRFx1kccfVeiN6ITGamBAGHdeCQY76pU2DNDmbZcR7kPUdgq9WtgwvJzcRwRjuFN7CKWNBy89O4CqOzKlCmaBR1M1Kxt9MzmBGeWpdqV%2BEKbZYj&amp;amp;X-Amz-Signature=fa70bd9a24ecbdab9461a8b89079e33dc41e4323c409645015663472539d8a3c&amp;amp;X-Amz-SignedHeaders=host&amp;amp;x-amz-checksum-mode=ENABLED&amp;amp;x-id=GetObject" alt="" />
&lt;h2 id="코랩을-로컬-런타임에-연결">코랩을 로컬 런타임에 연결&lt;/h2>
&lt;img src="https://prod-files-secure.s3.us-west-2.amazonaws.com/94f51666-273a-443d-bf89-42827b5b6876/3c7bdd51-5f3f-4eea-a87a-7051cbfee61d/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;amp;X-Amz-Credential=ASIAZI2LB466WIUACMPY%2F20250622%2Fus-west-2%2Fs3%2Faws4_request&amp;amp;X-Amz-Date=20250622T034139Z&amp;amp;X-Amz-Expires=3600&amp;amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPj%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDZQjn5EcfKBbxzQOo9in2YOBQe8mkPdj0BXnmDXo3uTAIhAI%2BSDk9q%2B%2BRN2hMPCppyEKvdF9gdf3vpJSmcx9CP%2BjftKogECOH%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNjM3NDIzMTgzODA1Igyg5xZXBPowavJKHNoq3AMQkrQ%2FE2QbNWkAxALc8TTxPZARGGAxOtWB73I%2BQsbtBZGlEXa99LgaHlD9PcfXi1SLXU1C5EuN43Sfj9fzFt6k9j%2BGqs9xbro61PGJGbsznrWgCux9HyG3mdwbxB370UVeQD0XkG%2FjbSFQ5OBAucKaHO5pOr8dFtxmnN2z6b90qfMxjvilCLluqJDxIOyLHolD8oFuBXX3fYDE6D7L2f4TxYnWn4pvFJwZPOWkFOeHVjBHoBYgNN0NUWrqFRY7tsT83yDKZY54Sy%2B3GYxMt6nSlSdXmUo2Wi1YiZG%2FXphx8sXQSvQRMjw2QlLIM1dtDD2lUXYODN2uD%2F0ksZKlz%2B8Kvzgjn5R9YCtn7zSXRz2XOywgjCxeJM5b2gTxZ%2Brl%2BxZCAcCc3srF5NujcfQ22VIaP3qIEBwSNdkzJf%2BxDtzkRy%2BAahNI0Hw5oG2w43sIKGPx9rYa%2BlaR7j5TYyX49Ge5SaM0DJxyQw2R1IEWYK%2FVxr9HvQZVBUWTaWMquxcJL2xyv%2FWThTPnKd82N9WTIOYAFVEHbVXYHIx%2FH0xn45UntltUGTn%2FtcNlnQO6IyjctElPHpta3WhjIeNHGLUEEhb5MkbfJRi5eep%2BlGNKc0JQgxg6ZXkzPrupF3t9eTCViN3CBjqkAcqODWFiQCMQvy6E6NTciCYDSH5oojdKFCFYTbEHwgTwOxwNeeTdLQggSM6OrEevVua9PHacG9ei35y80s2xupVg9Y2WBeTf815ckjCAIrUspCRFx1kccfVeiN6ITGamBAGHdeCQY76pU2DNDmbZcR7kPUdgq9WtgwvJzcRwRjuFN7CKWNBy89O4CqOzKlCmaBR1M1Kxt9MzmBGeWpdqV%2BEKbZYj&amp;amp;X-Amz-Signature=97488623054ea4fa2b71fe998701d491c118aa484b22791792aff9ec287dc4c1&amp;amp;X-Amz-SignedHeaders=host&amp;amp;x-amz-checksum-mode=ENABLED&amp;amp;x-id=GetObject" alt="" />
&lt;p>주피터 확장 프로그램을 설치&lt;/p></description></item><item><title>[파이썬] 서울 공공데이터 포털 Open API를 이용해서 지하철 승차인원수 구하기</title><link>http://localhost:1313/posts/2020-06-13-seoul-metro-data-openapi/</link><pubDate>Sat, 13 Jun 2020 21:36:00 +0900</pubDate><guid>http://localhost:1313/posts/2020-06-13-seoul-metro-data-openapi/</guid><description>&lt;p>공공데이터 포털를 활용할 일들이 많아지고 있다. 몇해 전부터 정부와 지자체에서 열심히 데이터를 공개해주고 있어서 이를 쏠쏠하게 활용해볼 수 있다. 오픈API로 데이터를 불러서 데이터프레임에만 데이터를 잘 쌓아놓으면 이래저래 활용하기가 매우 쉬워진다.&lt;/p>
&lt;img src="featured49-37.png" alt="" />
&lt;p>오늘은 서울시 공공데이터 포털인 &lt;a href="https://data.seoul.go.kr" >&amp;lsquo;서울 열린데이터 광장&amp;rsquo;&lt;/a>
에서 지하철 승하차 인원 정보를 불러와서 코로나 이후 지하철 이용이 어떻게 변했는지 알아보자.&lt;/p>
&lt;blockquote>
&lt;p>참고로 공공데이터포털에는 한국정보화진흥원에서 운영하는 정부 공식 &lt;a href="https://www.data.go.kr" >&amp;lsquo;공공데이터포털&amp;rsquo;&lt;/a>
도 있고, 통계청에서 운영하는 &lt;a href="https://kosis.kr/openapi/index/index.jsp" >Kosis 공유서비스&lt;/a>
, &lt;a href="https://ecos.bok.or.kr" >한국은행 Ecos&lt;/a>
등등 엄청 많다.&lt;/p></description></item><item><title>[파이썬] 코딩, 나를 키운 건 팔할이 오타다</title><link>http://localhost:1313/posts/python-coding-typos-learning/</link><pubDate>Mon, 02 Mar 2020 10:26:00 +0900</pubDate><guid>http://localhost:1313/posts/python-coding-typos-learning/</guid><description>&lt;p>요즘 데이터 분석에 한창이다. 파이썬에 하둡을 물려서 SQL 쿼리를 날리고, 이를 판다스로 불러와 분석하거나 간단한 것은 엑셀 피벗테이블으로 돌려보고 있다.&lt;/p>
&lt;p>그러다 보니 수없이 많은 에러 메시지를 접하게 된다. 특히, 간단한 쿼리문을 날리는 것에도 에러가 나서 좌절을 경험하곤 했다. 그런데, 조금 겪고 보니 결국은 간단한 나의 실수가 만든 일이었다.&lt;/p>
&lt;p>에러도 데이터가 좀 쌓이다 보니 일정한 패턴이 있는데, 그 중요한 유형이 바로 &amp;lt;오타&amp;gt;였다. 그러면서 문득 미당 서정주의 유명한 시구절이 생각났다.&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;스물 세 해 동안 나를 키운 건 팔 할이 바람이다.&amp;rdquo;&lt;br>
&lt;em>미당 서정주의 &amp;lt;자화상&amp;gt; 중&lt;/em>&lt;/p></description></item></channel></rss>